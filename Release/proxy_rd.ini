[Options]
bindport="localhost:3128"
redir_header="// proxy_rd demo script\r\n// require proxy_rd build 945\r\n\r\nimport __cdecl dup(1);\t\t// char *dup(char *src);\r\nimport __cdecl add(2);\t\t// char *add(char **dst, char *src);\r\nimport __cdecl free(1);\t\t// void free(char *src);\r\nimport __cdecl encode(1);\t// char *encode(char *src);\r\nimport __cdecl encoden(2);\t// char *encode(char *src, unsigned long len);\r\nimport __cdecl msg(2);\t\t// void msg(char *title, char *text);\r\nimport __cdecl yes(2);\t\t// bool yes(char *title, char *text);\r\nimport __cdecl isempty(1);\t// bool isempty(char *src);\r\nimport __cdecl isset(1);\t// bool isset(char *src);\r\nimport __cdecl strstr(2);\t// char *strstr(char *src, char *key);\r\nimport __cdecl strstri(2);\t// char *strstri(char *src, char *key);\r\nimport __cdecl dupn(1);\t\t// char *dupn(unsigned long n);\r\nimport __cdecl crypt(3);\t// char *crypt(char *buf, unsigned long len, unsigned long en_pos);\r\n\r\nimport __cdecl strcmp(2);\t// bool strcmp(char *src1, char *src2);\r\nimport __cdecl stricmp(2);\t// bool stricmp(char *src1, char *src2);\r\nimport __cdecl htmlencode(1);\t// char *htmlencode(char *src);\r\nimport __cdecl atoi(1);\t\t// int atoi(char *src);\r\nimport __cdecl zalloc(1);\t// void *zalloc(unsigned long size);\r\nimport __cdecl zrealloc(2);\t// void *zrealloc(void *data, unsigned long size);\r\nimport __cdecl zfree(1);\t// void zfree(void *data);\r\nimport __cdecl pcre_match_all(7);\t// int pcre_match_all(char *pattern, char *buffer, int buf_size, int options, int exoptions, int find_all, char ***res[]);\r\nimport __cdecl pcre_match_free(1);\t// void pcre_match_free(char ***res);\r\nimport __cdecl strlen(1);\t// int strlen(char *src);\r\n\r\n/*\r\n// in parameters\r\nextern char *method, *protocol, *uri_full, *uri_relative, *uri_full_encoded;\r\nextern char *host, *port, *build, *h_host_port, *h_unknown, *h_cookie, *h_accept;\r\nextern char *h_accept_lang, *h_accept_charset, *h_if_mod_since, *h_if_none_match;\r\nextern char *h_referer, *h_user_agent, *h_proxy_connection, *h_keep_alive;\r\nextern char *h_authorization, *h_cache_control, *h_pragma, *h_range, *h_content_type;\r\nextern char *h_content_length, *scheme, *authority, *path, *query, *fragment;\r\nextern unsigned long options;\r\n\r\n// out parameters\r\nextern char *header, *rdhost, *rdport;\r\n*/\r\n\r\nfunction main()\r\n{\r\n\t// initialise global variables here\r\n\t//msg(\"proxy_rd\",\"Hello, world!\");\r\n\r\n\t/*\r\n\tchar ***res;\r\n\tchar *test;\r\n\ttest = \"http://www.pfzim.ru/download.php\?id=9\";\r\n\r\n\tif(pcre_match_all(\"^(\?:http://)\?([^/]+)\", test, strlen(test), 0, 0, 0, &res) > 0)\r\n\t{\r\n\t\tmsg(\"proxy_rd: pcre test\", res[0][0]);\r\n\t\tpcre_match_free(res);\r\n\t}\r\n\t*/\r\n}\r\n\r\nfunction proxy_rd(\r\n\tunsigned long *header_len, char **post_data, unsigned long *post_data_len, char **footer, unsigned long *footer_len,\r\n\tunsigned long *options, char **rdhost, char **rdport,\r\n\tchar *method, char *protocol, char *uri_full, char *uri_relative, char *uri_full_encoded,\r\n\tchar *host, char *build, char *h_host_port, char *h_unknown, char *h_cookie, char *h_accept,\r\n\tchar *h_accept_lang, char *h_accept_charset, char *h_if_mod_since, char *h_if_none_match,\r\n\tchar *h_referer, char *h_user_agent, char *h_proxy_connection, char *h_keep_alive,\r\n\tchar *h_authorization, char *h_cache_control, char *h_pragma, char *h_range, char *h_content_type,\r\n\tchar *h_content_length, char *port, char *query, char *scheme, char *authority, char *path, char *fragment\r\n)\r\n{\r\n\tchar *header;\r\n\r\n\t// temporary variables\r\n\tunsigned long blocked_site, hack_method, use_proxy;\r\n\tchar **site;\r\n\tchar *temp;\r\n\r\n\theader = NULL;\r\n\thack_method = 2;\t// can be 1, 2 or 3\r\n\tuse_proxy = 0;\t\t// can be 0 or 1\r\n\r\n\tchar *blocked_sites_list[] =\r\n\t{\r\n\t\t\"odnoklassniki.ru\",\r\n\t\t\"vkontakte.ru\",\r\n\t\t\"mail.ru\",\r\n\t\tNULL\r\n\t};\r\n\r\n\tif(isempty(host))\r\n\t{\r\n\t\tmsg(\"proxy_rd debug msg\", \"strange: host not defined!\");\r\n\t}\r\n\r\n\tblocked_site = 0;\r\n\tsite = blocked_sites_list;\r\n\r\n\twhile(*site)\r\n\t{\r\n\t\tif(strstri(host, *site))\r\n\t\t{\r\n\t\t\tblocked_site = 1;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tsite++;\r\n\t}\r\n\r\n\tif(blocked_site)\r\n\t{\r\n\t\tif(hack_method == 1)\r\n\t\t{\r\n\t\t\t// direct connect to host with modified uri\r\n\t\t\t*rdhost = dup(host);\r\n\t\t\tif(!isempty(port))\r\n\t\t\t{\r\n\t\t\t\t*rdport = dup(port);\r\n\t\t\t}\r\n\r\n\t\t\tadd(&header, method);\r\n\t\t\tadd(&header, \" \");\r\n\t\t\tadd(&header, uri_relative);\r\n\t\t\tif(isempty(fragment))\r\n\t\t\t{\r\n\t\t\t\tif(!isempty(query))\r\n\t\t\t\t{\r\n\t\t\t\t\tadd(&header, \"&\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tadd(&header, \"\?\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tadd(&header, \"microsoft \");  // magic keyword allowed by proxy firewall\r\n\t\t\t//add(&header, \"analit \");\r\n\t\t\tadd(&header, protocol);\r\n\t\t\tadd(&header, \"\\r\\n\");\r\n\t\t}\r\n\t\telse if(hack_method == 2)\r\n\t\t{\r\n\t\t\t// connect to host through proxy script\r\n\t\t\t*rdhost = dup(\"www.pfzim.ru\");\r\n\r\n\t\t\tadd(&header, method);\r\n\t\t\tadd(&header, \" http://www.pfzim.ru/funcs/redir_nx.php\?id=\");\r\n\t\t\tadd(&header, uri_full_encoded);\r\n\t\t\tadd(&header, \"&md=\");\r\n\t\t\tadd(&header, temp = encode(method)); free(temp);\r\n\t\t\tadd(&header, \"&pl=\");\r\n\t\t\tadd(&header, temp = encode(protocol)); free(temp);\r\n\t\t\tadd(&header, \"&st=on HTTP/1.0\\r\\n\");\r\n\t\t}\r\n\t\telse if(hack_method == 3)\r\n\t\t{\r\n\t\t\t// connect to host through other proxy\r\n\t\t\t*rdhost = dup(\"proxyserver\");\r\n\t\t\t*rdport = dup(\"3128\");\r\n\r\n\t\t\tadd(&header, method);\r\n\t\t\tadd(&header, \" \");\r\n\t\t\tadd(&header, uri_relative);\r\n\t\t\tadd(&header, \" \");\r\n\t\t\tadd(&header, protocol);\r\n\t\t\tadd(&header, \"\\r\\n\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// connect to not bocked sites\r\n\t\tif(use_proxy)\r\n\t\t{\r\n\t\t\t// connect through other proxy\r\n\t\t\t*rdhost = dup(\"proxyserver\");\r\n\t\t\t*rdport = dup(\"3128\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// direct connect to host\r\n\t\t\t*rdhost = dup(host);\r\n\t\t\tif(!isempty(port))\r\n\t\t\t{\r\n\t\t\t\t*rdport = dup(port);\r\n\t\t\t}\r\n\r\n\t\t\tif(*options & 0x04)\r\n\t\t\t{\r\n\t\t\t\t// connect method no need header - exit\r\n\t\t\t\treturn NULL;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tadd(&header, method);\r\n\t\tadd(&header, \" \");\r\n\t\tadd(&header, uri_relative);\r\n\t\tadd(&header, \" \");\r\n\t\tadd(&header, protocol);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_host_port))\r\n\t{\r\n\t\tadd(&header, \"Host: \");\r\n\t\tif(blocked_site && (hack_method == 2))\r\n\t\t{\r\n\t\t\tadd(&header, *rdhost);\r\n\t\t\tif(!isempty(*rdport))\r\n\t\t\t{\r\n\t\t\t\tadd(&header, \":\");\r\n\t\t\t\tadd(&header, *rdport);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tadd(&header, h_host_port);\r\n\t\t}\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tadd(&header, \"Connection: close\\r\\n\");\r\n\r\n\tif(!isempty(h_cache_control))\r\n\t{\r\n\t\tadd(&header, \"Cache-Control: \");\r\n\t\tadd(&header, h_cache_control);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_pragma))\r\n\t{\r\n\t\tadd(&header, \"Pragma: \");\r\n\t\tadd(&header, h_pragma);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept))\r\n\t{\r\n\t\tadd(&header, \"Accept: \");\r\n\t\tadd(&header, h_accept);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept_lang))\r\n\t{\r\n\t\tadd(&header, \"Accept-Language: \");\r\n\t\tadd(&header, h_accept_lang);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept_charset))\r\n\t{\r\n\t\tadd(&header, \"Accept-Charset: \");\r\n\t\tadd(&header, h_accept_charset);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_if_mod_since))\r\n\t{\r\n\t\tadd(&header, \"If-Modified-Since: \");\r\n\t\tadd(&header, h_if_mod_since);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_if_none_match))\r\n\t{\r\n\t\tadd(&header, \"If-None-Match: \");\r\n\t\tadd(&header, h_if_none_match);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_referer))\r\n\t{\r\n\t\tadd(&header, \"Referer: \");\r\n\t\tadd(&header, h_referer);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_user_agent))\r\n\t{\r\n\t\tadd(&header, \"User-Agent: \");\r\n\t\tadd(&header, h_user_agent);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_authorization))\r\n\t{\r\n\t\tadd(&header, \"Authorization: \");\r\n\t\tadd(&header, h_authorization);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_range))\r\n\t{\r\n\t\tadd(&header, \"Range: \");\r\n\t\tadd(&header, h_range);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_content_type))\r\n\t{\r\n\t\tadd(&header, \"Content-Type: \");\r\n\t\tadd(&header, h_content_type);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_content_length))\r\n\t{\r\n\t\tadd(&header, \"Content-Length: \");\r\n\t\tadd(&header, h_content_length);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_cookie))\r\n\t{\r\n\t\tadd(&header, \"Cookie: \");\r\n\t\tadd(&header, h_cookie);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tadd(&header, h_unknown);\r\n\r\n\tadd(&header, \"\\r\\n\");\r\n\r\n\t//msg(\"proxy_rd: debug message\", header);\r\n\r\n\tif(header)\r\n\t{\r\n\t\t*header_len = strlen(header);\r\n\t}\r\n\treturn header;\r\n}\r\n\r\n"
options="0"
