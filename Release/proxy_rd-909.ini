[Options]
bindport="localhost:3128"
;redir_header="// in parameters\r\nextern char *method, *protocol, *uri_full, *uri_relative, *uri_full_encoded;\r\nextern char *host, *port, *build, *h_hostport, *h_unknown, *h_cookie, *h_accept;\r\nextern char *h_accept_lang, *h_accept_charset, *h_if_mod_since, *h_if_none_match;\r\nextern char *h_referer, *h_user_agent, *h_proxy_connection, *h_keep_alive;\r\nextern char *h_authorization, *h_cache_control, *h_pragma, *h_range, *h_content_type;\r\nextern char *h_content_length, *scheme, *authority, *path, *query, *fragment;\r\nextern unsigned long options;\r\n\r\n// out parameters\r\nextern char *header, *rdhost, *rdport;\r\n\r\n// temporary variables\r\nunsigned long blocked_site, hack_method, use_proxy;\r\nchar **site;\r\nchar *temp;\r\n\r\nhack_method = 2; // can be 1, 2 or 3\r\nuse_proxy = 0; // can be 0 or 1\r\n\r\nchar *blocked_sites_list[] =\r\n{\r\n\t\"odnoklassniki.ru\",\r\n\t\"vkontakte.ru\",\r\n\tNULL\r\n};\r\n\r\nif(isempty(host))\r\n{\r\n\tmsg(\"proxy_rd debug msg\", \"strange: host not defined!\");\r\n}\r\n\r\nblocked_site = 0;\r\nsite = blocked_sites_list;\r\n\r\nwhile(*site)\r\n{\r\n\tif(strstri(host, *site))\r\n\t{\r\n\t\tblocked_site = 1;\r\n\t\tbreak;\r\n\t}\r\n\tsite++;\r\n}\r\n\r\nif(blocked_site)\r\n{\r\n\tif(hack_method == 1)\r\n\t{\r\n\t\t// direct connect to host with modified uri\r\n\t\trdhost = dup(host);\r\n\t\tif(!isempty(port))\r\n\t\t{\r\n\t\t\trdport = dup(port);\r\n\t\t}\r\n\r\n\t\tadd(&header, method);\r\n\t\tadd(&header, \" \");\r\n\t\tadd(&header, uri_relative);\r\n\t\tif(isempty(fragment))\r\n\t\t{\r\n\t\t\tif(!isempty(query))\r\n\t\t\t{\r\n\t\t\t\tadd(&header, \"&\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tadd(&header, \"\?\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tadd(&header, \"microsoft \");  // magic keyword allowed by proxy firewall\r\n\t\t//add(&header, \"analit \");\r\n\t\tadd(&header, protocol);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\telse if(hack_method == 2)\r\n\t{\r\n\t\t// connect to host through proxy script\r\n\t\trdhost = dup(\"www.pfzim.ru\");\r\n\r\n\t\tadd(&header, method);\r\n\t\tadd(&header, \" http://www.pfzim.ru/funcs/redir_nx.php\?id=\");\r\n\t\tadd(&header, uri_full_encoded);\r\n\t\tadd(&header, \"&md=\");\r\n\t\tadd(&header, temp = encode(method)); free(temp);\r\n\t\tadd(&header, \"&pl=\");\r\n\t\tadd(&header, temp = encode(protocol)); free(temp);\r\n\t\tadd(&header, \"&st=on HTTP/1.0\\r\\n\");\r\n\t}\r\n\telse if(hack_method == 3)\r\n\t{\r\n\t\t// connect to host trough other proxy\r\n\t\trdhost = dup(\"proxyserver\");\r\n\t\trdport = dup(\"3128\");\r\n\r\n\t\tadd(&header, method);\r\n\t\tadd(&header, \" \");\r\n\t\tadd(&header, uri_relative);\r\n\t\tadd(&header, \" \");\r\n\t\tadd(&header, protocol);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n}\r\nelse\r\n{\r\n\t// connect to not bocked sites\r\n\tif(use_proxy)\r\n\t{\r\n\t\t// connect trough other proxy\r\n\t\trdhost = dup(\"proxyserver\");\r\n\t\trdport = dup(\"3128\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// direct connect to host\r\n\t\trdhost = dup(host);\r\n\t\tif(!isempty(port))\r\n\t\t{\r\n\t\t\trdport = dup(port);\r\n\t\t}\r\n\r\n\t\tif(options & 0x04)\r\n\t\t{\r\n\t\t\t// connect method no need header - exit\r\n\t\t\tgoto lb_exit;\r\n\t\t}\r\n\t}\r\n\r\n\tadd(&header, method);\r\n\tadd(&header, \" \");\r\n\tadd(&header, uri_relative);\r\n\tadd(&header, \" \");\r\n\tadd(&header, protocol);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_hostport))\r\n{\r\n\tadd(&header, \"Host: \");\r\n\tif(blocked_site && (hack_method == 2))\r\n\t{\r\n\t\tadd(&header, rdhost);\r\n\t\tif(!isempty(rdport))\r\n\t\t{\r\n\t\t\tadd(&header, \":\");\r\n\t\t\tadd(&header, rdport);\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tadd(&header, h_hostport);\r\n\t}\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nadd(&header, \"Connection: close\\r\\n\");\r\n\r\nif(!isempty(h_cache_control))\r\n{\r\n\tadd(&header, \"Cache-Control: \");\r\n\tadd(&header, h_cache_control);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_pragma))\r\n{\r\n\tadd(&header, \"Pragma: \");\r\n\tadd(&header, h_pragma);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_accept))\r\n{\r\n\tadd(&header, \"Accept: \");\r\n\tadd(&header, h_accept);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_accept_lang))\r\n{\r\n\tadd(&header, \"Accept-Language: \");\r\n\tadd(&header, h_accept_lang);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_accept_charset))\r\n{\r\n\tadd(&header, \"Accept-Charset: \");\r\n\tadd(&header, h_accept_charset);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_if_mod_since))\r\n{\r\n\tadd(&header, \"If-Modified-Since: \");\r\n\tadd(&header, h_if_mod_since);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_if_none_match))\r\n{\r\n\tadd(&header, \"If-None-Match: \");\r\n\tadd(&header, h_if_none_match);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_referer))\r\n{\r\n\tadd(&header, \"Referer: \");\r\n\tadd(&header, h_referer);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_user_agent))\r\n{\r\n\tadd(&header, \"User-Agent: \");\r\n\tadd(&header, h_user_agent);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_authorization))\r\n{\r\n\tadd(&header, \"Authorization: \");\r\n\tadd(&header, h_authorization);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_range))\r\n{\r\n\tadd(&header, \"Range: \");\r\n\tadd(&header, h_range);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_content_type))\r\n{\r\n\tadd(&header, \"Content-Type: \");\r\n\tadd(&header, h_content_type);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_content_length))\r\n{\r\n\tadd(&header, \"Content-Length: \");\r\n\tadd(&header, h_content_length);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nif(!isempty(h_cookie))\r\n{\r\n\tadd(&header, \"Cookie: \");\r\n\tadd(&header, h_cookie);\r\n\tadd(&header, \"\\r\\n\");\r\n}\r\n\r\nadd(&header, h_unknown);\r\n\r\nadd(&header, \"\\r\\n\");\r\n\r\n//msg(\"proxy_rd: debug message\", header);\r\n\r\nlb_exit:\r\n"
;redir_header="// script only for me\r\n\r\nimport __cdecl dup(1);\r\nimport __cdecl add(2);\r\nimport __cdecl free(1);\r\nimport __cdecl encode(1);\r\nimport __cdecl msg(2);\r\nimport __cdecl isempty(1);\r\n\r\nfunction main()\r\n{\r\n\t// initialise global variables here\r\n\t//msg(\"proxy_rd\",\"Hello, world!\");\r\n}\r\n\r\nfunction proxy_rd(\r\n\tunsigned long *options, char **rdhost, char **rdport,\r\n\tchar *method, char *protocol, char *uri_full, char *uri_relative, char *uri_full_encoded,\r\n\tchar *host, char *build, char *h_hostport, char *h_unknown, char *h_cookie, char *h_accept,\r\n\tchar *h_accept_lang, char *h_accept_charset, char *h_if_mod_since, char *h_if_none_match,\r\n\tchar *h_referer, char *h_user_agent, char *h_proxy_connection, char *h_keep_alive,\r\n\tchar *h_authorization, char *h_cache_control, char *h_pragma, char *h_range, char *h_content_type,\r\n\tchar *h_content_length, char *port, char *query, char *scheme, char *authority, char *path, char *fragment\r\n)\r\n{\r\n\tchar *header;\r\n\tchar *temp;\r\n\r\n\theader = NULL;\r\n\r\n\tif(isempty(host))\r\n\t{\r\n\t\tmsg(\"proxy_rd debug msg\", \"strange: host not defined!\");\r\n\t}\r\n\r\n\tif(*options & 0x04)\r\n\t{\r\n\t\t// connect method no need header - exit\r\n\t\treturn NULL;\r\n\t}\r\n\r\n\t// connect to host trough proxy script\r\n\t*rdhost = dup(\"www.pfzim.ru\");\r\n\r\n\tadd(&header, method);\r\n\tadd(&header, \" http://www.pfzim.ru/funcs/redir_nx.php\?id=\");\r\n\tadd(&header, uri_full_encoded);\r\n\tadd(&header, \"&md=\");\r\n\tadd(&header, temp = encode(method)); free(temp);\r\n\tadd(&header, \"&pl=\");\r\n\tadd(&header, temp = encode(protocol)); free(temp);\r\n\tadd(&header, \"&log=off&co=on&filelog=off HTTP/1.0\\r\\n\");\r\n\r\n\tadd(&header, \"Host: www.pfzim.ru\\r\\n\");\r\n\r\n\t//add(&header, \"Proxy-Connection: close\\r\\n\");\r\n\tadd(&header, \"Connection: close\\r\\n\");\r\n\r\n\tif(!isempty(h_cache_control))\r\n\t{\r\n\t\tadd(&header, \"Cache-Control: \");\r\n\t\tadd(&header, h_cache_control);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_pragma))\r\n\t{\r\n\t\tadd(&header, \"Pragma: \");\r\n\t\tadd(&header, h_pragma);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept))\r\n\t{\r\n\t\tadd(&header, \"Accept: \");\r\n\t\tadd(&header, h_accept);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept_lang))\r\n\t{\r\n\t\tadd(&header, \"Accept-Language: \");\r\n\t\tadd(&header, h_accept_lang);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept_charset))\r\n\t{\r\n\t\tadd(&header, \"Accept-Charset: \");\r\n\t\tadd(&header, h_accept_charset);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_if_mod_since))\r\n\t{\r\n\t\tadd(&header, \"If-Modified-Since: \");\r\n\t\tadd(&header, h_if_mod_since);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_if_none_match))\r\n\t{\r\n\t\tadd(&header, \"If-None-Match: \");\r\n\t\tadd(&header, h_if_none_match);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_referer))\r\n\t{\r\n\t\tadd(&header, \"Referer: \");\r\n\t\tadd(&header, h_referer);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_user_agent))\r\n\t{\r\n\t\tadd(&header, \"User-Agent: \");\r\n\t\tadd(&header, h_user_agent);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_authorization))\r\n\t{\r\n\t\tadd(&header, \"Authorization: \");\r\n\t\tadd(&header, h_authorization);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_range))\r\n\t{\r\n\t\tadd(&header, \"Range: \");\r\n\t\tadd(&header, h_range);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_content_type))\r\n\t{\r\n\t\tadd(&header, \"Content-Type: \");\r\n\t\tadd(&header, h_content_type);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_content_length))\r\n\t{\r\n\t\tadd(&header, \"Content-Length: \");\r\n\t\tadd(&header, h_content_length);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_cookie))\r\n\t{\r\n\t\tadd(&header, \"Cookie: \");\r\n\t\tadd(&header, h_cookie);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tadd(&header, h_unknown);\r\n\r\n\tadd(&header, \"\\r\\n\");\r\n\r\n\t//msg(\"proxy_rd: debug message\", header);\r\n\r\n\treturn header;\r\n}\r\n"
redir_header="// demo script\r\n\r\nimport __cdecl dup(1);\r\nimport __cdecl add(2);\r\nimport __cdecl free(1);\r\nimport __cdecl encode(1);\r\nimport __cdecl msg(2);\r\nimport __cdecl isempty(1);\r\nimport __cdecl strstri(2);\r\n\r\nfunction main()\r\n{\r\n\t// initialise global variables here\r\n\t//msg(\"proxy_rd\",\"Hello, world!\");\r\n}\r\n\r\nfunction proxy_rd(\r\n\tunsigned long *options, char **rdhost, char **rdport,\r\n\tchar *method, char *protocol, char *uri_full, char *uri_relative, char *uri_full_encoded,\r\n\tchar *host, char *build, char *h_hostport, char *h_unknown, char *h_cookie, char *h_accept,\r\n\tchar *h_accept_lang, char *h_accept_charset, char *h_if_mod_since, char *h_if_none_match,\r\n\tchar *h_referer, char *h_user_agent, char *h_proxy_connection, char *h_keep_alive,\r\n\tchar *h_authorization, char *h_cache_control, char *h_pragma, char *h_range, char *h_content_type,\r\n\tchar *h_content_length, char *port, char *query, char *scheme, char *authority, char *path, char *fragment\r\n)\r\n{\r\n\tchar *header;\r\n\r\n\t// temporary variables\r\n\tunsigned long blocked_site, hack_method, use_proxy;\r\n\tchar **site;\r\n\tchar *temp;\r\n\t\r\n\theader = NULL;\r\n\r\n\thack_method = 2; // can be 1, 2 or 3\r\n\tuse_proxy = 0; // can be 0 or 1\r\n\r\n\tchar *blocked_sites_list[] =\r\n\t{\r\n\t\t\"odnoklassniki.ru\",\r\n\t\t\"vkontakte.ru\",\r\n\t\tNULL\r\n\t};\r\n\r\n\tif(isempty(host))\r\n\t{\r\n\t\tmsg(\"proxy_rd debug msg\", \"strange: host not defined!\");\r\n\t}\r\n\r\n\tblocked_site = 0;\r\n\tsite = blocked_sites_list;\r\n\r\n\twhile(*site)\r\n\t{\r\n\t\tif(strstri(host, *site))\r\n\t\t{\r\n\t\t\tblocked_site = 1;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tsite++;\r\n\t}\r\n\r\n\tif(blocked_site)\r\n\t{\r\n\t\tif(hack_method == 1)\r\n\t\t{\r\n\t\t\t// direct connect to host with modified uri\r\n\t\t\trdhost = dup(host);\r\n\t\t\tif(!isempty(port))\r\n\t\t\t{\r\n\t\t\t\trdport = dup(port);\r\n\t\t\t}\r\n\r\n\t\t\tadd(&header, method);\r\n\t\t\tadd(&header, \" \");\r\n\t\t\tadd(&header, uri_relative);\r\n\t\t\tif(isempty(fragment))\r\n\t\t\t{\r\n\t\t\t\tif(!isempty(query))\r\n\t\t\t\t{\r\n\t\t\t\t\tadd(&header, \"&\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tadd(&header, \"\?\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tadd(&header, \"microsoft \");  // magic keyword allowed by proxy firewall\r\n\t\t\t//add(&header, \"analit \");\r\n\t\t\tadd(&header, protocol);\r\n\t\t\tadd(&header, \"\\r\\n\");\r\n\t\t}\r\n\t\telse if(hack_method == 2)\r\n\t\t{\r\n\t\t\t// connect to host through proxy script\r\n\t\t\trdhost = dup(\"www.pfzim.ru\");\r\n\r\n\t\t\tadd(&header, method);\r\n\t\t\tadd(&header, \" http://www.pfzim.ru/funcs/redir_nx.php\?id=\");\r\n\t\t\tadd(&header, uri_full_encoded);\r\n\t\t\tadd(&header, \"&md=\");\r\n\t\t\tadd(&header, temp = encode(method)); free(temp);\r\n\t\t\tadd(&header, \"&pl=\");\r\n\t\t\tadd(&header, temp = encode(protocol)); free(temp);\r\n\t\t\tadd(&header, \"&st=on HTTP/1.0\\r\\n\");\r\n\t\t}\r\n\t\telse if(hack_method == 3)\r\n\t\t{\r\n\t\t\t// connect to host trough other proxy\r\n\t\t\trdhost = dup(\"proxyserver\");\r\n\t\t\trdport = dup(\"3128\");\r\n\r\n\t\t\tadd(&header, method);\r\n\t\t\tadd(&header, \" \");\r\n\t\t\tadd(&header, uri_relative);\r\n\t\t\tadd(&header, \" \");\r\n\t\t\tadd(&header, protocol);\r\n\t\t\tadd(&header, \"\\r\\n\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// connect to not bocked sites\r\n\t\tif(use_proxy)\r\n\t\t{\r\n\t\t\t// connect trough other proxy\r\n\t\t\trdhost = dup(\"proxyserver\");\r\n\t\t\trdport = dup(\"3128\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// direct connect to host\r\n\t\t\trdhost = dup(host);\r\n\t\t\tif(!isempty(port))\r\n\t\t\t{\r\n\t\t\t\trdport = dup(port);\r\n\t\t\t}\r\n\r\n\t\t\tif(options & 0x04)\r\n\t\t\t{\r\n\t\t\t\t// connect method no need header - exit\r\n\t\t\t\treturn NULL;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tadd(&header, method);\r\n\t\tadd(&header, \" \");\r\n\t\tadd(&header, uri_relative);\r\n\t\tadd(&header, \" \");\r\n\t\tadd(&header, protocol);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_hostport))\r\n\t{\r\n\t\tadd(&header, \"Host: \");\r\n\t\tif(blocked_site && (hack_method == 2))\r\n\t\t{\r\n\t\t\tadd(&header, rdhost);\r\n\t\t\tif(!isempty(rdport))\r\n\t\t\t{\r\n\t\t\t\tadd(&header, \":\");\r\n\t\t\t\tadd(&header, rdport);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tadd(&header, h_hostport);\r\n\t\t}\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tadd(&header, \"Connection: close\\r\\n\");\r\n\r\n\tif(!isempty(h_cache_control))\r\n\t{\r\n\t\tadd(&header, \"Cache-Control: \");\r\n\t\tadd(&header, h_cache_control);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_pragma))\r\n\t{\r\n\t\tadd(&header, \"Pragma: \");\r\n\t\tadd(&header, h_pragma);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept))\r\n\t{\r\n\t\tadd(&header, \"Accept: \");\r\n\t\tadd(&header, h_accept);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept_lang))\r\n\t{\r\n\t\tadd(&header, \"Accept-Language: \");\r\n\t\tadd(&header, h_accept_lang);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_accept_charset))\r\n\t{\r\n\t\tadd(&header, \"Accept-Charset: \");\r\n\t\tadd(&header, h_accept_charset);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_if_mod_since))\r\n\t{\r\n\t\tadd(&header, \"If-Modified-Since: \");\r\n\t\tadd(&header, h_if_mod_since);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_if_none_match))\r\n\t{\r\n\t\tadd(&header, \"If-None-Match: \");\r\n\t\tadd(&header, h_if_none_match);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_referer))\r\n\t{\r\n\t\tadd(&header, \"Referer: \");\r\n\t\tadd(&header, h_referer);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_user_agent))\r\n\t{\r\n\t\tadd(&header, \"User-Agent: \");\r\n\t\tadd(&header, h_user_agent);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_authorization))\r\n\t{\r\n\t\tadd(&header, \"Authorization: \");\r\n\t\tadd(&header, h_authorization);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_range))\r\n\t{\r\n\t\tadd(&header, \"Range: \");\r\n\t\tadd(&header, h_range);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_content_type))\r\n\t{\r\n\t\tadd(&header, \"Content-Type: \");\r\n\t\tadd(&header, h_content_type);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_content_length))\r\n\t{\r\n\t\tadd(&header, \"Content-Length: \");\r\n\t\tadd(&header, h_content_length);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tif(!isempty(h_cookie))\r\n\t{\r\n\t\tadd(&header, \"Cookie: \");\r\n\t\tadd(&header, h_cookie);\r\n\t\tadd(&header, \"\\r\\n\");\r\n\t}\r\n\r\n\tadd(&header, h_unknown);\r\n\r\n\tadd(&header, \"\\r\\n\");\r\n\r\n\t//msg(\"proxy_rd: debug message\", header);\r\n\r\n\treturn header;\r\n}\r\n"
options="0"
